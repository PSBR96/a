name: Android CI (Auto-Unzip + Build)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Find and unzip project if zipped
        run: |
          ZIP_FILE=$(ls focusguard_starter_v2.zip.zip 2>/dev/null || true)
          if [ -n "$ZIP_FILE" ]; then
            echo "📦 Found ZIP: $ZIP_FILE — unzipping..."
            unzip -o "$ZIP_FILE" -d extracted
            rsync -a extracted/ . || true
          else
            echo "ℹ️ No ZIP file found — continuing..."
          fi

      - name: Debug: list files
        run: |
          echo "📂 Listing root folder:"
          ls -al
          echo "📂 Listing extracted folder:"
          ls -al extracted

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: gradle-cache-${{ runner.os }}-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            gradle-cache-${{ runner.os }}-

      - name: Build APK
        run: |
          echo "🚀 Searching for gradlew recursively..."
          GRADLEW_PATH=$(find . -type f -name "gradlew" | head -n 1)
          if [ -z "$GRADLEW_PATH" ]; then
            echo "❌ gradlew not found! Listing all files for debugging:"
            find .
            exit 1
          fi

          GRADLE_DIR=$(dirname "$GRADLEW_PATH")
          echo "Found gradlew in $GRADLE_DIR, building APK..."
          cd "$GRADLE_DIR"

          chmod +x gradlew
          ./gradlew assembleDebug --no-daemon

      - name: Locate APK file
        id: locate
        run: |
          APK_PATH=$(find . -type f -name "app-debug.apk" | head -n 1)
          if [ -z "$APK_PATH" ]; then
            echo "❌ APK not found!"
            exit 1
          fi
          echo "apk_path=$APK_PATH" >> $GITHUB_OUTPUT
          echo "✅ Found APK at $APK_PATH"

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: FocusGuard-APK
          path: ${{ steps.locate.outputs.apk_path }}
